{
    "questions": {
        "1": "You want to upload files from an on-premises virtual machine to Google Cloud Storage as part of a data migration. These files will be consumed by Cloud DataProc Hadoop cluster in a GCP environment. Which command should you use?",
        "2": "You migrated your applications to Google Cloud Platform and kept your existing monitoring platform. You now find that your notification system is too slow for time critical problems. What should you do?",
        "3": "You are planning to migrate a MySQL database to the managed Cloud SQL database for Google Cloud. You have Compute Engine virtual machine instances that will connect with this Cloud SQL instance. You do not want to whitelist IPs for the Compute Engine instances to be able to access Cloud SQL. What should you do?",
        "4": "You have deployed an HTTP(s) Load Balancer with the gcloud commands shown in photo?\nHealth checks to port 80 on the Compute Engine virtual machine instance are failing and no traffic is sent to your instances. You want to resolve the problem. Which commands should you run?",
        "5": "Your website is deployed on Compute Engine. Your marketing team wants to test conversion rates between 3 different website designs. Which approach should you use?",
        "6": "You need to copy directory local-scripts and all of its contents from your local workstation to a Compute Engine virtual machine instance. Which command should you use?",
        "7": "You are deploying your application to a Compute Engine virtual machine instance with the Stackdriver Monitoring Agent installed. Your application is a unix process on the instance. You want to be alerted if the unix process has not run for at least 5 minutes. You are not able to change the application to generate metrics or logs. Which alert condition should you configure?",
        "8": "You have two tables in an ANSI-SQL compliant database with identical columns that you need to quickly combine into a single table, removing duplicate rows from the result set. What should you do?",
        "9": "You have an application deployed in production. When a new version is deployed, some issues don't arise until the application receives traffic from users in production. You want to reduce both the impact and the number of users affected. Which deployment strategy should you use?",
        "10": "Your company wants to expand their users outside the United States for their popular application. The company wants to ensure 99.999% availability of the database for their application and also wants to minimize the read latency for their users across the globe. Which two actions should they take? (Choose two.)",
        "11": "You need to migrate an internal file upload API with an enforced 500-MB file size limit to App Engine. What should you do?",
        "12": "Your teammate has asked you to review the code below. Its purpose is to efficiently add a large number of small rows to a BigQuery table.(photo)\nWhich improvement should you suggest your teammate make?",
        "13": "You are developing a JPEG image-resizing API hosted on Google Kubernetes Engine (GKE). Callers of the service will exist within the same GKE cluster. You want clients to be able to get the IP address of the service. What should you do?",
        "14": "You are using Cloud Build to build and test application source code stored in Cloud Source Repositories. The build process requires a build tool not available in the Cloud Build environment. What should you do?",
        "15": "You are deploying your application to a Compute Engine virtual machine instance. Your application is configured to write its log files to disk. You want to view the logs in Stackdriver Logging without changing the application code. What should you do?",
        "16": "Your service adds text to images that it reads from Cloud Storage. During busy times of the year, requests to Cloud Storage fail with an HTTP 429 \"Too Many Requests\" status code. How should you handle this error?",
        "17": "You are building an API that will be used by Android and iOS apps. The API must: * Support HTTPs * Minimize bandwidth cost * Integrate easily with mobile apps Which API architecture should you use?",
        "18": "Your application takes an input from a user and publishes it to the user's contacts. This input is stored in a table in Cloud Spanner. Your application is more sensitive to latency and less sensitive to consistency. How should you perform reads from Cloud Spanner for this application?",
        "19": "Your application is deployed in a Google Kubernetes Engine (GKE) cluster. When a new version of your application is released, your CI/CD tool updates the spec.template.spec.containers[0].image value to reference the Docker image of your new application version. When the Deployment object applies the change, you want to deploy at least 1 replica of the new version and maintain the previous replicas until the new replica is healthy. Which change should you make to the GKE Deployment object shown below?",
        "20": "You plan to make a simple HTML application available on the internet. This site keeps information about FAQs for your application. The application is static and contains images, HTML, CSS, and Javascript. You want to make this application available on the internet with as few steps as possible. What should you do?",
        "21": "Your company has deployed a new API to App Engine Standard environment. During testing, the API is not behaving as expected. You want to monitor the application over time to diagnose the problem within the application code without redeploying the application. Which tool should you use?",
        "22": "You want to use the Stackdriver Logging Agent to send an application's log file to Stackdriver from a Compute Engine virtual machine instance. After installing the Stackdriver Logging Agent, what should you do first?",
        "23": "Your company has a BigQuery data mart that provides analytics information to hundreds of employees. One user of wants to run jobs without interrupting important workloads. This user isn't concerned about the time it takes to run these jobs. You want to fulfill this request while minimizing cost to the company and the effort required on your part. What should you do?",
        "24": "You want to notify on-call engineers about a service degradation in production while minimizing development time. What should you do?",
        "25": "You are writing a single-page web application with a user-interface that communicates with a third-party API for content using XMLHttpRequest. The data displayed on the UI by the API results is less critical than other data displayed on the same web page, so it is acceptable for some requests to not have the API data displayed in the UI. However, calls made to the API should not delay rendering of other parts of the user interface. You want your application to perform well when the API response is an error or a timeout. What should you do?",
        "26": "You are creating a web application that runs in a Compute Engine instance and writes a file to any user's Google Drive. You need to configure the application to authenticate to the Google Drive API. What should you do?",
        "27": "You are creating a Google Kubernetes Engine (GKE) cluster and run this command:\ngcloud container clusters create large-cluster --num-nodes 200\nThe command fails with the error:(photo)\n\nYou want to resolve the issue. What should you do?",
        "28": "You are parsing a log file that contains three columns: a timestamp, an account number (a string), and a transaction amount (a number). You want to calculate the sum of all transaction amounts for each unique account number efficiently. Which data structure should you use?",
        "29": "Your company has a BigQuery dataset named \"Master\" that keeps information about employee travel and expenses. This information is organized by employee department. That means employees should only be able to view information for their department. You want to apply a security framework to enforce this requirement with the minimum number of steps. What should you do?",
        "30": "You have an application in production. It is deployed on Compute Engine virtual machine instances controlled by a managed instance group. Traffic is routed to the instances via a HTTP(s) load balancer. Your users are unable to access your application. You want to implement a monitoring technique to alert you when the application is unavailable. Which technique should you choose?",
        "31": "You are load testing your server application. During the first 30 seconds, you observe that a previously inactive Cloud Storage bucket is now servicing 2000 write requests per second and 7500 read requests per second. Your application is now receiving intermittent 5xx and 429 HTTP responses from the Cloud Storage JSON API as the demand escalates. You want to decrease the failed responses from the Cloud Storage API. What should you do?",
        "32": "Your application is controlled by a managed instance group. You want to share a large read-only data set between all the instances in the managed instance group. You want to ensure that each instance can start quickly and can access the data set via its filesystem with very low latency. You also want to minimize the total cost of the solution. What should you do?",
        "33": "You are developing an HTTP API hosted on a Compute Engine virtual machine instance that needs to be invoked by multiple clients within the same Virtual Private Cloud (VPC). You want clients to be able to get the IP address of the service. What should you do?",
        "34": "Your application is logging to Stackdriver. You want to get the count of all requests on all /api/alpha/* endpoints. What should you do?",
        "35": "You want to re-architect a monolithic application so that it follows a microservices model. You want to accomplish this efficiently while minimizing the impact of this change to the business. Which approach should you take?",
        "36": "Your existing application keeps user state information in a single MySQL database. This state information is very user-specific and depends heavily on how long a user has been using an application. The MySQL database is causing challenges to maintain and enhance the schema for various users. Which storage option should you choose?",
        "37": "You are building a new API. You want to minimize the cost of storing and reduce the latency of serving images. Which architecture should you use?",
        "38": "Your company's development teams want to use Cloud Build in their projects to build and push Docker images to Container Registry. The operations team requires all Docker images to be published to a centralized, securely managed Docker registry that the operations team manages. What should you do?",
        "39": "You are planning to deploy your application in a Google Kubernetes Engine (GKE) cluster. Your application can scale horizontally, and each instance of your application needs to have a stable network identity and its own persistent disk. Which GKE object should you use?",
        "40": "You are using Cloud Build to build a Docker image. You need to modify the build to execute unit and run integration tests. When there is a failure, you want the build history to clearly display the stage at which the build failed. What should you do?",
        "41": "Your code is running on Cloud Functions in project A. It is supposed to write an object in a Cloud Storage bucket owned by project B. However, the write call is failing with the error \"403 Forbidden\". What should you do to correct the problem?",
        "42": "Case study -\nThis is a case study. Case studies are not timed separately. You can use as much exam time as you would like to complete each case. However, there may be additional case studies and sections on this exam. You must manage your time to ensure that you are able to complete all questions included on this exam in the time provided.\nTo answer the questions included in a case study, you will need to reference information that is provided in the case study. Case studies might contain exhibits and other resources that provide more information about the scenario that is described in the case study. Each question is independent of the other questions in this case study.\nAt the end of this case study, a review screen will appear. This screen allows you to review your answers and to make changes before you move to the next section of the exam. After you begin a new section, you cannot return to this section.\n\nTo start the case study -\nTo display the first question in this case study, click the Next button. Use the buttons in the left pane to explore the content of the case study before you answer the questions. Clicking these buttons displays information such as business requirements, existing environment, and problem statements. If the case study has an\nAll Information tab, note that the information displayed is identical to the information displayed on the subsequent tabs. When you are ready to answer a question, click the Question button to return to the question.\n\nCompany Overview -\nHipLocal is a community application designed to facilitate communication between people in close proximity. It is used for event planning and organizing sporting events, and for businesses to connect with their local communities. HipLocal launched recently in a few neighborhoods in Dallas and is rapidly growing into a global phenomenon. Its unique style of hyper-local community communication and business outreach is in demand around the world.\n\nExecutive Statement -\nWe are the number one local community app; it's time to take our local community services global. Our venture capital investors want to see rapid growth and the same great experience for new local and virtual communities that come online, whether their members are 10 or 10000 miles away from each other.\n\nSolution Concept -\nHipLocal wants to expand their existing service, with updated functionality, in new regions to better serve their global customers. They want to hire and train a new team to support these regions in their time zones. They will need to ensure that the application scales smoothly and provides clear uptime data.\n\nExisting Technical Environment -\nHipLocal's environment is a mix of on-premises hardware and infrastructure running in Google Cloud Platform. The HipLocal team understands their application well, but has limited experience in global scale applications. Their existing technical environment is as follows:\n* Existing APIs run on Compute Engine virtual machine instances hosted in GCP.\n* State is stored in a single instance MySQL database in GCP.\n* Data is exported to an on-premises Teradata/Vertica data warehouse.\n* Data analytics is performed in an on-premises Hadoop environment.\n* The application has no logging.\n* There are basic indicators of uptime; alerts are frequently fired when the APIs are unresponsive.\n\nBusiness Requirements -\nHipLocal's investors want to expand their footprint and support the increase in demand they are seeing. Their requirements are:\n* Expand availability of the application to new regions.\n* Increase the number of concurrent users that can be supported.\n* Ensure a consistent experience for users when they travel to different regions.\n* Obtain user activity metrics to better understand how to monetize their product.\n* Ensure compliance with regulations in the new regions (for example, GDPR).\n* Reduce infrastructure management time and cost.\n* Adopt the Google-recommended practices for cloud computing.\n\nTechnical Requirements -\n* The application and backend must provide usage metrics and monitoring.\n* APIs require strong authentication and authorization.\n* Logging must be increased, and data should be stored in a cloud analytics platform.\n* Move to serverless architecture to facilitate elastic scaling.\n* Provide authorized access to internal apps in a secure manner.\nHipLocal's .net-based auth service fails under intermittent load.\nWhat should they do?\n",
        "43": "Case study - This is a case study. Case studies are not timed separately. You can use as much exam time as you would like to complete each case. However, there may be additional case studies and sections on this exam. You must manage your time to ensure that you are able to complete all questions included on this exam in the time provided. To answer the questions included in a case study, you will need to reference information that is provided in the case study. Case studies might contain exhibits and other resources that provide more information about the scenario that is described in the case study. Each question is independent of the other questions in this case study. At the end of this case study, a review screen will appear. This screen allows you to review your answers and to make changes before you move to the next section of the exam. After you begin a new section, you cannot return to this section. To start the case study - To display the first question in this case study, click the Next button. Use the buttons in the left pane to explore the content of the case study before you answer the questions. Clicking these buttons displays information such as business requirements, existing environment, and problem statements. If the case study has an All Information tab, note that the information displayed is identical to the information displayed on the subsequent tabs. When you are ready to answer a question, click the Question button to return to the question. Company Overview - HipLocal is a community application designed to facilitate communication between people in close proximity. It is used for event planning and organizing sporting events, and for businesses to connect with their local communities. HipLocal launched recently in a few neighborhoods in Dallas and is rapidly growing into a global phenomenon. Its unique style of hyper-local community communication and business outreach is in demand around the world. Executive Statement - We are the number one local community app; it's time to take our local community services global. Our venture capital investors want to see rapid growth and the same great experience for new local and virtual communities that come online, whether their members are 10 or 10000 miles away from each other. Solution Concept - HipLocal wants to expand their existing service, with updated functionality, in new regions to better serve their global customers. They want to hire and train a new team to support these regions in their time zones. They will need to ensure that the application scales smoothly and provides clear uptime data. Existing Technical Environment - HipLocal's environment is a mix of on-premises hardware and infrastructure running in Google Cloud Platform. The HipLocal team understands their application well, but has limited experience in global scale applications. Their existing technical environment is as follows: * Existing APIs run on Compute Engine virtual machine instances hosted in GCP. * State is stored in a single instance MySQL database in GCP. * Data is exported to an on-premises Teradata/Vertica data warehouse. * Data analytics is performed in an on-premises Hadoop environment. * The application has no logging. * There are basic indicators of uptime; alerts are frequently fired when the APIs are unresponsive. Business Requirements - HipLocal's investors want to expand their footprint and support the increase in demand they are seeing. Their requirements are: * Expand availability of the application to new regions. * Increase the number of concurrent users that can be supported. * Ensure a consistent experience for users when they travel to different regions. * Obtain user activity metrics to better understand how to monetize their product. * Ensure compliance with regulations in the new regions (for example, GDPR). * Reduce infrastructure management time and cost. * Adopt the Google-recommended practices for cloud computing. Technical Requirements - * The application and backend must provide usage metrics and monitoring. * APIs require strong authentication and authorization. * Logging must be increased, and data should be stored in a cloud analytics platform. * Move to serverless architecture to facilitate elastic scaling. * Provide authorized access to internal apps in a secure manner. HipLocal's APIs are having occasional application failures. They want to collect application information specifically to troubleshoot the issue. What should they do?",
        "44": "Case study - This is a case study. Case studies are not timed separately. You can use as much exam time as you would like to complete each case. However, there may be additional case studies and sections on this exam. You must manage your time to ensure that you are able to complete all questions included on this exam in the time provided. To answer the questions included in a case study, you will need to reference information that is provided in the case study. Case studies might contain exhibits and other resources that provide more information about the scenario that is described in the case study. Each question is independent of the other questions in this case study. At the end of this case study, a review screen will appear. This screen allows you to review your answers and to make changes before you move to the next section of the exam. After you begin a new section, you cannot return to this section. To start the case study - To display the first question in this case study, click the Next button. Use the buttons in the left pane to explore the content of the case study before you answer the questions. Clicking these buttons displays information such as business requirements, existing environment, and problem statements. If the case study has an All Information tab, note that the information displayed is identical to the information displayed on the subsequent tabs. When you are ready to answer a question, click the Question button to return to the question. Company Overview - HipLocal is a community application designed to facilitate communication between people in close proximity. It is used for event planning and organizing sporting events, and for businesses to connect with their local communities. HipLocal launched recently in a few neighborhoods in Dallas and is rapidly growing into a global phenomenon. Its unique style of hyper-local community communication and business outreach is in demand around the world. Executive Statement - We are the number one local community app; it's time to take our local community services global. Our venture capital investors want to see rapid growth and the same great experience for new local and virtual communities that come online, whether their members are 10 or 10000 miles away from each other. Solution Concept - HipLocal wants to expand their existing service, with updated functionality, in new regions to better serve their global customers. They want to hire and train a new team to support these regions in their time zones. They will need to ensure that the application scales smoothly and provides clear uptime data. Existing Technical Environment - HipLocal's environment is a mix of on-premises hardware and infrastructure running in Google Cloud Platform. The HipLocal team understands their application well, but has limited experience in global scale applications. Their existing technical environment is as follows: * Existing APIs run on Compute Engine virtual machine instances hosted in GCP. * State is stored in a single instance MySQL database in GCP. * Data is exported to an on-premises Teradata/Vertica data warehouse. * Data analytics is performed in an on-premises Hadoop environment. * The application has no logging. * There are basic indicators of uptime; alerts are frequently fired when the APIs are unresponsive. Business Requirements - HipLocal's investors want to expand their footprint and support the increase in demand they are seeing. Their requirements are: * Expand availability of the application to new regions. * Increase the number of concurrent users that can be supported. * Ensure a consistent experience for users when they travel to different regions. * Obtain user activity metrics to better understand how to monetize their product. * Ensure compliance with regulations in the new regions (for example, GDPR). * Reduce infrastructure management time and cost. * Adopt the Google-recommended practices for cloud computing. Technical Requirements - * The application and backend must provide usage metrics and monitoring. * APIs require strong authentication and authorization. * Logging must be increased, and data should be stored in a cloud analytics platform. * Move to serverless architecture to facilitate elastic scaling. * Provide authorized access to internal apps in a secure manner. HipLocal has connected their Hadoop infrastructure to GCP using Cloud Interconnect in order to query data stored on persistent disks. Which IP strategy should they use?",
        "45": "Case study - This is a case study. Case studies are not timed separately. You can use as much exam time as you would like to complete each case. However, there may be additional case studies and sections on this exam. You must manage your time to ensure that you are able to complete all questions included on this exam in the time provided. To answer the questions included in a case study, you will need to reference information that is provided in the case study. Case studies might contain exhibits and other resources that provide more information about the scenario that is described in the case study. Each question is independent of the other questions in this case study. At the end of this case study, a review screen will appear. This screen allows you to review your answers and to make changes before you move to the next section of the exam. After you begin a new section, you cannot return to this section. To start the case study - To display the first question in this case study, click the Next button. Use the buttons in the left pane to explore the content of the case study before you answer the questions. Clicking these buttons displays information such as business requirements, existing environment, and problem statements. If the case study has an All Information tab, note that the information displayed is identical to the information displayed on the subsequent tabs. When you are ready to answer a question, click the Question button to return to the question. Company Overview - HipLocal is a community application designed to facilitate communication between people in close proximity. It is used for event planning and organizing sporting events, and for businesses to connect with their local communities. HipLocal launched recently in a few neighborhoods in Dallas and is rapidly growing into a global phenomenon. Its unique style of hyper-local community communication and business outreach is in demand around the world. Executive Statement - We are the number one local community app; it's time to take our local community services global. Our venture capital investors want to see rapid growth and the same great experience for new local and virtual communities that come online, whether their members are 10 or 10000 miles away from each other. Solution Concept - HipLocal wants to expand their existing service, with updated functionality, in new regions to better serve their global customers. They want to hire and train a new team to support these regions in their time zones. They will need to ensure that the application scales smoothly and provides clear uptime data. Existing Technical Environment - HipLocal's environment is a mix of on-premises hardware and infrastructure running in Google Cloud Platform. The HipLocal team understands their application well, but has limited experience in global scale applications. Their existing technical environment is as follows: * Existing APIs run on Compute Engine virtual machine instances hosted in GCP. * State is stored in a single instance MySQL database in GCP. * Data is exported to an on-premises Teradata/Vertica data warehouse. * Data analytics is performed in an on-premises Hadoop environment. * The application has no logging. * There are basic indicators of uptime; alerts are frequently fired when the APIs are unresponsive. Business Requirements - HipLocal's investors want to expand their footprint and support the increase in demand they are seeing. Their requirements are: * Expand availability of the application to new regions. * Increase the number of concurrent users that can be supported. * Ensure a consistent experience for users when they travel to different regions. * Obtain user activity metrics to better understand how to monetize their product. * Ensure compliance with regulations in the new regions (for example, GDPR). * Reduce infrastructure management time and cost. * Adopt the Google-recommended practices for cloud computing. Technical Requirements - * The application and backend must provide usage metrics and monitoring. * APIs require strong authentication and authorization. * Logging must be increased, and data should be stored in a cloud analytics platform. * Move to serverless architecture to facilitate elastic scaling. * Provide authorized access to internal apps in a secure manner. Which service should HipLocal use to enable access to internal apps?",
        "46": "Case study - This is a case study. Case studies are not timed separately. You can use as much exam time as you would like to complete each case. However, there may be additional case studies and sections on this exam. You must manage your time to ensure that you are able to complete all questions included on this exam in the time provided. To answer the questions included in a case study, you will need to reference information that is provided in the case study. Case studies might contain exhibits and other resources that provide more information about the scenario that is described in the case study. Each question is independent of the other questions in this case study. At the end of this case study, a review screen will appear. This screen allows you to review your answers and to make changes before you move to the next section of the exam. After you begin a new section, you cannot return to this section. To start the case study - To display the first question in this case study, click the Next button. Use the buttons in the left pane to explore the content of the case study before you answer the questions. Clicking these buttons displays information such as business requirements, existing environment, and problem statements. If the case study has an All Information tab, note that the information displayed is identical to the information displayed on the subsequent tabs. When you are ready to answer a question, click the Question button to return to the question. Company Overview - HipLocal is a community application designed to facilitate communication between people in close proximity. It is used for event planning and organizing sporting events, and for businesses to connect with their local communities. HipLocal launched recently in a few neighborhoods in Dallas and is rapidly growing into a global phenomenon. Its unique style of hyper-local community communication and business outreach is in demand around the world. Executive Statement - We are the number one local community app; it's time to take our local community services global. Our venture capital investors want to see rapid growth and the same great experience for new local and virtual communities that come online, whether their members are 10 or 10000 miles away from each other. Solution Concept - HipLocal wants to expand their existing service, with updated functionality, in new regions to better serve their global customers. They want to hire and train a new team to support these regions in their time zones. They will need to ensure that the application scales smoothly and provides clear uptime data. Existing Technical Environment - HipLocal's environment is a mix of on-premises hardware and infrastructure running in Google Cloud Platform. The HipLocal team understands their application well, but has limited experience in global scale applications. Their existing technical environment is as follows: * Existing APIs run on Compute Engine virtual machine instances hosted in GCP. * State is stored in a single instance MySQL database in GCP. * Data is exported to an on-premises Teradata/Vertica data warehouse. * Data analytics is performed in an on-premises Hadoop environment. * The application has no logging. * There are basic indicators of uptime; alerts are frequently fired when the APIs are unresponsive. Business Requirements - HipLocal's investors want to expand their footprint and support the increase in demand they are seeing. Their requirements are: * Expand availability of the application to new regions. * Increase the number of concurrent users that can be supported. * Ensure a consistent experience for users when they travel to different regions. * Obtain user activity metrics to better understand how to monetize their product. * Ensure compliance with regulations in the new regions (for example, GDPR). * Reduce infrastructure management time and cost. * Adopt the Google-recommended practices for cloud computing. Technical Requirements - * The application and backend must provide usage metrics and monitoring. * APIs require strong authentication and authorization. * Logging must be increased, and data should be stored in a cloud analytics platform. * Move to serverless architecture to facilitate elastic scaling. * Provide authorized access to internal apps in a secure manner. HipLocal wants to reduce the number of on-call engineers and eliminate manual scaling. Which two services should they choose? (Choose two.)",
        "47": "Case study - This is a case study. Case studies are not timed separately. You can use as much exam time as you would like to complete each case. However, there may be additional case studies and sections on this exam. You must manage your time to ensure that you are able to complete all questions included on this exam in the time provided. To answer the questions included in a case study, you will need to reference information that is provided in the case study. Case studies might contain exhibits and other resources that provide more information about the scenario that is described in the case study. Each question is independent of the other questions in this case study. At the end of this case study, a review screen will appear. This screen allows you to review your answers and to make changes before you move to the next section of the exam. After you begin a new section, you cannot return to this section. To start the case study - To display the first question in this case study, click the Next button. Use the buttons in the left pane to explore the content of the case study before you answer the questions. Clicking these buttons displays information such as business requirements, existing environment, and problem statements. If the case study has an All Information tab, note that the information displayed is identical to the information displayed on the subsequent tabs. When you are ready to answer a question, click the Question button to return to the question. Company Overview - HipLocal is a community application designed to facilitate communication between people in close proximity. It is used for event planning and organizing sporting events, and for businesses to connect with their local communities. HipLocal launched recently in a few neighborhoods in Dallas and is rapidly growing into a global phenomenon. Its unique style of hyper-local community communication and business outreach is in demand around the world. Executive Statement - We are the number one local community app; it's time to take our local community services global. Our venture capital investors want to see rapid growth and the same great experience for new local and virtual communities that come online, whether their members are 10 or 10000 miles away from each other. Solution Concept - HipLocal wants to expand their existing service, with updated functionality, in new regions to better serve their global customers. They want to hire and train a new team to support these regions in their time zones. They will need to ensure that the application scales smoothly and provides clear uptime data. Existing Technical Environment - HipLocal's environment is a mix of on-premises hardware and infrastructure running in Google Cloud Platform. The HipLocal team understands their application well, but has limited experience in global scale applications. Their existing technical environment is as follows: * Existing APIs run on Compute Engine virtual machine instances hosted in GCP. * State is stored in a single instance MySQL database in GCP. * Data is exported to an on-premises Teradata/Vertica data warehouse. * Data analytics is performed in an on-premises Hadoop environment. * The application has no logging. * There are basic indicators of uptime; alerts are frequently fired when the APIs are unresponsive. Business Requirements - HipLocal's investors want to expand their footprint and support the increase in demand they are seeing. Their requirements are: * Expand availability of the application to new regions. * Increase the number of concurrent users that can be supported. * Ensure a consistent experience for users when they travel to different regions. * Obtain user activity metrics to better understand how to monetize their product. * Ensure compliance with regulations in the new regions (for example, GDPR). * Reduce infrastructure management time and cost. * Adopt the Google-recommended practices for cloud computing. Technical Requirements - * The application and backend must provide usage metrics and monitoring. * APIs require strong authentication and authorization. * Logging must be increased, and data should be stored in a cloud analytics platform. * Move to serverless architecture to facilitate elastic scaling. * Provide authorized access to internal apps in a secure manner. In order to meet their business requirements, how should HipLocal store their application state?",
        "48": "Case study - This is a case study. Case studies are not timed separately. You can use as much exam time as you would like to complete each case. However, there may be additional case studies and sections on this exam. You must manage your time to ensure that you are able to complete all questions included on this exam in the time provided. To answer the questions included in a case study, you will need to reference information that is provided in the case study. Case studies might contain exhibits and other resources that provide more information about the scenario that is described in the case study. Each question is independent of the other questions in this case study. At the end of this case study, a review screen will appear. This screen allows you to review your answers and to make changes before you move to the next section of the exam. After you begin a new section, you cannot return to this section. To start the case study - To display the first question in this case study, click the Next button. Use the buttons in the left pane to explore the content of the case study before you answer the questions. Clicking these buttons displays information such as business requirements, existing environment, and problem statements. If the case study has an All Information tab, note that the information displayed is identical to the information displayed on the subsequent tabs. When you are ready to answer a question, click the Question button to return to the question. Company Overview - HipLocal is a community application designed to facilitate communication between people in close proximity. It is used for event planning and organizing sporting events, and for businesses to connect with their local communities. HipLocal launched recently in a few neighborhoods in Dallas and is rapidly growing into a global phenomenon. Its unique style of hyper-local community communication and business outreach is in demand around the world. Executive Statement - We are the number one local community app; it's time to take our local community services global. Our venture capital investors want to see rapid growth and the same great experience for new local and virtual communities that come online, whether their members are 10 or 10000 miles away from each other. Solution Concept - HipLocal wants to expand their existing service, with updated functionality, in new regions to better serve their global customers. They want to hire and train a new team to support these regions in their time zones. They will need to ensure that the application scales smoothly and provides clear uptime data. Existing Technical Environment - HipLocal's environment is a mix of on-premises hardware and infrastructure running in Google Cloud Platform. The HipLocal team understands their application well, but has limited experience in global scale applications. Their existing technical environment is as follows: * Existing APIs run on Compute Engine virtual machine instances hosted in GCP. * State is stored in a single instance MySQL database in GCP. * Data is exported to an on-premises Teradata/Vertica data warehouse. * Data analytics is performed in an on-premises Hadoop environment. * The application has no logging. * There are basic indicators of uptime; alerts are frequently fired when the APIs are unresponsive. Business Requirements - HipLocal's investors want to expand their footprint and support the increase in demand they are seeing. Their requirements are: * Expand availability of the application to new regions. * Increase the number of concurrent users that can be supported. * Ensure a consistent experience for users when they travel to different regions. * Obtain user activity metrics to better understand how to monetize their product. * Ensure compliance with regulations in the new regions (for example, GDPR). * Reduce infrastructure management time and cost. * Adopt the Google-recommended practices for cloud computing. Technical Requirements - * The application and backend must provide usage metrics and monitoring. * APIs require strong authentication and authorization. * Logging must be increased, and data should be stored in a cloud analytics platform. * Move to serverless architecture to facilitate elastic scaling. * Provide authorized access to internal apps in a secure manner. Which service should HipLocal use for their public APIs?",
        "49": "Case study - This is a case study. Case studies are not timed separately. You can use as much exam time as you would like to complete each case. However, there may be additional case studies and sections on this exam. You must manage your time to ensure that you are able to complete all questions included on this exam in the time provided. To answer the questions included in a case study, you will need to reference information that is provided in the case study. Case studies might contain exhibits and other resources that provide more information about the scenario that is described in the case study. Each question is independent of the other questions in this case study. At the end of this case study, a review screen will appear. This screen allows you to review your answers and to make changes before you move to the next section of the exam. After you begin a new section, you cannot return to this section. To start the case study - To display the first question in this case study, click the Next button. Use the buttons in the left pane to explore the content of the case study before you answer the questions. Clicking these buttons displays information such as business requirements, existing environment, and problem statements. If the case study has an All Information tab, note that the information displayed is identical to the information displayed on the subsequent tabs. When you are ready to answer a question, click the Question button to return to the question. Company Overview - HipLocal is a community application designed to facilitate communication between people in close proximity. It is used for event planning and organizing sporting events, and for businesses to connect with their local communities. HipLocal launched recently in a few neighborhoods in Dallas and is rapidly growing into a global phenomenon. Its unique style of hyper-local community communication and business outreach is in demand around the world. Executive Statement - We are the number one local community app; it's time to take our local community services global. Our venture capital investors want to see rapid growth and the same great experience for new local and virtual communities that come online, whether their members are 10 or 10000 miles away from each other. Solution Concept - HipLocal wants to expand their existing service, with updated functionality, in new regions to better serve their global customers. They want to hire and train a new team to support these regions in their time zones. They will need to ensure that the application scales smoothly and provides clear uptime data. Existing Technical Environment - HipLocal's environment is a mix of on-premises hardware and infrastructure running in Google Cloud Platform. The HipLocal team understands their application well, but has limited experience in global scale applications. Their existing technical environment is as follows: * Existing APIs run on Compute Engine virtual machine instances hosted in GCP. * State is stored in a single instance MySQL database in GCP. * Data is exported to an on-premises Teradata/Vertica data warehouse. * Data analytics is performed in an on-premises Hadoop environment. * The application has no logging. * There are basic indicators of uptime; alerts are frequently fired when the APIs are unresponsive. Business Requirements - HipLocal's investors want to expand their footprint and support the increase in demand they are seeing. Their requirements are: * Expand availability of the application to new regions. * Increase the number of concurrent users that can be supported. * Ensure a consistent experience for users when they travel to different regions. * Obtain user activity metrics to better understand how to monetize their product. * Ensure compliance with regulations in the new regions (for example, GDPR). * Reduce infrastructure management time and cost. * Adopt the Google-recommended practices for cloud computing. Technical Requirements - * The application and backend must provide usage metrics and monitoring. * APIs require strong authentication and authorization. * Logging must be increased, and data should be stored in a cloud analytics platform. * Move to serverless architecture to facilitate elastic scaling. * Provide authorized access to internal apps in a secure manner. HipLocal wants to improve the resilience of their MySQL deployment, while also meeting their business and technical requirements. Which configuration should they choose?",
        "50": "Your application is running in multiple Google Kubernetes Engine clusters. It is managed by a Deployment in each cluster. The Deployment has created multiple replicas of your Pod in each cluster. You want to view the logs sent to stdout for all of the replicas in your Deployment in all clusters. Which command should you use?",
        "51": "You are using Cloud Build to create a new Docker image on each source code commit to a Cloud Source Repositories repository. Your application is built on every commit to the master branch. You want to release specific commits made to the master branch in an automated method. What should you do?",
        "52": "You are designing a schema for a table that will be moved from MySQL to Cloud Bigtable. The MySQL table is as photo:\n\nHow should you design a row key for Cloud Bigtable for this table?",
        "53": "You want to view the memory usage of your application deployed on Compute Engine. What should you do?",
        "54": "You have an analytics application that runs hundreds of queries on BigQuery every few minutes using BigQuery API. You want to find out how much time these queries take to execute. What should you do?",
        "55": "You are designing a schema for a Cloud Spanner customer database. You want to store a phone number array field in a customer table. You also want to allow users to search customers by phone number. How should you design this schema?",
        "56": "You are deploying a single website on App Engine that needs to be accessible via the URL http://www.altostrat.com/. What should you do?",
        "57": "You are running an application on App Engine that you inherited. You want to find out whether the application is using insecure binaries or is vulnerable to XSS attacks. Which service should you use?",
        "58": "You are working on a social media application. You plan to add a feature that allows users to upload images. These images will be 2 MB `\" 1 GB in size. You want to minimize their infrastructure operations overhead for this feature. What should you do?",
        "59": "Your application is built as a custom machine image. You have multiple unique deployments of the machine image. Each deployment is a separate managed instance group with its own template. Each deployment requires a unique set of configuration values. You want to provide these unique values to each deployment but use the same custom machine image in all deployments. You want to use out-of-the-box features of Compute Engine. What should you do?",
        "60": "Your application performs well when tested locally, but it runs significantly slower after you deploy it to a Compute Engine instance. You need to diagnose the problem. What should you do? What should you do?",
        "61": "You have an application running in App Engine. Your application is instrumented with Stackdriver Trace. The /product-details request reports details about four known unique products at /sku-details as shown below. You want to reduce the time it takes for the request to complete. What should you do?",
        "62": "Your company has a data warehouse that keeps your application information in BigQuery. The BigQuery data warehouse keeps 2 PBs of user data. Recently, your company expanded your user base to include EU users and needs to comply with these requirements: \u2711 Your company must be able to delete all user account information upon user request. \u2711 All EU user data must be stored in a single region specifically for EU users. Which two actions should you take? (Choose two.)",
        "63": "Your App Engine standard configuration is as follows: service: production instance_class: B1 You want to limit the application to 5 instances. Which code snippet should you include in your configuration?",
        "64": "Your analytics system executes queries against a BigQuery dataset. The SQL query is executed in batch and passes the contents of a SQL file to the BigQuery CLI. Then it redirects the BigQuery CLI output to another process. However, you are getting a permission error from the BigQuery CLI when the queries are executed. You want to resolve the issue. What should you do?",
        "65": "Your application is running on Compute Engine and is showing sustained failures for a small number of requests. You have narrowed the cause down to a single Compute Engine instance, but the instance is unresponsive to SSH. What should you do next?",
        "66": "You configured your Compute Engine instance group to scale automatically according to overall CPU usage. However, your application's response latency increases sharply before the cluster has finished adding up instances. You want to provide a more consistent latency experience for your end users by changing the configuration of the instance group autoscaler. Which two configuration changes should you make? (Choose two.)",
        "67": "You have an application controlled by a managed instance group. When you deploy a new version of the application, costs should be minimized and the number of instances should not increase. You want to ensure that, when each new instance is created, the deployment only continues if the new instance is healthy. What should you do?"
    },
    "answers": {
        "1": {
            "A": [
                "gsutil cp [LOCAL_OBJECT] gs://[DESTINATION_BUCKET_NAME]/",
                true
            ],
            "B": [
                "gcloud cp [LOCAL_OBJECT] gs://[DESTINATION_BUCKET_NAME]/",
                false
            ],
            "C": [
                "hadoop fs cp [LOCAL_OBJECT] gs://[DESTINATION_BUCKET_NAME]/",
                false
            ],
            "D": [
                "gcloud dataproc cp [LOCAL_OBJECT] gs://[DESTINATION_BUCKET_NAME]/",
                false
            ]
        },
        "2": {
            "A": [
                "Replace your entire monitoring platform with Stackdriver.",
                true
            ],
            "B": [
                "Install the Stackdriver agents on your Compute Engine instances.",
                false
            ],
            "C": [
                "Use Stackdriver to capture and alert on logs, then ship them to your existing platform.",
                false
            ],
            "D": [
                "Migrate some traffic back to your old platform and perform AB testing on the two platforms concurrently.",
                false
            ]
        },
        "3": {
            "A": [
                "Enable private IP for the Cloud SQL instance.",
                true
            ],
            "B": [
                "Whitelist a project to access Cloud SQL, and add Compute Engine instances in the whitelisted project.",
                false
            ],
            "C": [
                "Create a role in Cloud SQL that allows access to the database from external instances, and assign the Compute Engine instances to that role.",
                false
            ],
            "D": [
                "Create a CloudSQL instance on one project. Create Compute engine instances in a different project. Create a VPN between these two projects to allow internal access to CloudSQL.",
                false
            ]
        },
        "4": {
            "A": [
                "gcloud compute instances add-access-config ${NAME}-backend-instance-1",
                false
            ],
            "B": [
                "gcloud compute instances add-tags ${NAME}-backend-instance-1 --tags http-server",
                false
            ],
            "C": [
                "gcloud compute firewall-rules create allow-lb --network load-balancer --allow tcp --source-ranges 130.211.0.0/22,35.191.0.0/16 --direction INGRESS",
                true
            ],
            "D": [
                "gcloud compute firewall-rules create allow-lb --network load-balancer --allow tcp --destination-ranges 130.211.0.0/22,35.191.0.0/16 --direction EGRESS",
                false
            ]
        },
        "5": {
            "A": [
                "Deploy the website on App Engine and use traffic splitting.",
                true
            ],
            "B": [
                "Deploy the website on App Engine as three separate services.",
                false
            ],
            "C": [
                "Deploy the website on Cloud Functions and use traffic splitting.",
                false
            ],
            "D": [
                "Deploy the website on Cloud Functions as three separate functions",
                false
            ]
        },
        "6": {
            "A": [
                "gsutil cp --project my-gcp-project-r ~/local-scripts/ gcp-instance-name:~/server-scripts/ --zone us-east1-b",
                false
            ],
            "B": [
                "gsutil cp --project my-gcp-project -R ~/local-scripts/ gcp-instance-name:~/server-scripts/ --zone us-east1-b",
                false
            ],
            "C": [
                "gcloud compute scp --project my-gcp-project --recurse ~/local-scripts/ gcp-instance-name:~/server-scripts/ --zone us-east1-b",
                true
            ],
            "D": [
                "gcloud compute mv --project my-gcp-project --recurse ~/local-scripts/ gcp-instance-name:~/server-scripts/ --zone us-east1-b",
                false
            ]
        },
        "7": {
            "A": [
                "Uptime check",
                false
            ],
            "B": [
                "Process health",
                true
            ],
            "C": [
                "Metric absence",
                false
            ],
            "D": [
                "Metric threshold",
                false
            ]
        },
        "8": {
            "A": [
                "Use the JOIN operator in SQL to combine the tables.",
                false
            ],
            "B": [
                "Use nested WITH statements to combine the tables.",
                false
            ],
            "C": [
                "Use the UNION operator in SQL to combine the tables.",
                true
            ],
            "D": [
                "Use the UNION ALL operator in SQL to combine the tables.\n",
                false
            ]
        },
        "9": {
            "A": [
                "Blue/green deployment",
                false
            ],
            "B": [
                "Canary deployment",
                true
            ],
            "C": [
                "Rolling deployment",
                false
            ],
            "D": [
                "Recreate deployment",
                false
            ]
        },
        "10": {
            "A": [
                "Create a multi-regional Cloud Spanner instance with \"nam-asia-eur1\" configuration.",
                true
            ],
            "B": [
                "Create a multi-regional Cloud Spanner instance with \"nam3\" configuration.",
                false
            ],
            "C": [
                "Create a cluster with at least 3 Spanner nodes.",
                true
            ],
            "D": [
                "Create a cluster with at least 1 Spanner node.",
                false
            ],
            "E": [
                "Create a minimum of two Cloud Spanner instances in separate regions with at least one node.",
                false
            ],
            "F": [
                "Create a Cloud Dataflow pipeline to replicate data across different databases.",
                false
            ]
        },
        "11": {
            "A": [
                "Use FTP to upload files.",
                false
            ],
            "B": [
                "Use CPanel to upload files.",
                false
            ],
            "C": [
                "Use signed URLs to upload files.",
                true
            ],
            "D": [
                "Change the API to be a multipart file upload API.",
                false
            ]
        },
        "12": {
            "A": [
                "Include multiple rows with each request.",
                false
            ],
            "B": [
                "Perform the inserts in parallel by creating multiple threads.",
                true
            ],
            "C": [
                "Write each row to a Cloud Storage object, then load into BigQuery.",
                false
            ],
            "D": [
                "Write each row to a Cloud Storage object in parallel, then load into BigQuery.",
                false
            ]
        },
        "13": {
            "A": [
                "Define a GKE Service. Clients should use the name of the A record in Cloud DNS to find the service's cluster IP address.",
                false
            ],
            "B": [
                "Define a GKE Service. Clients should use the service name in the URL to connect to the service.",
                true
            ],
            "C": [
                "Define a GKE Endpoint. Clients should get the endpoint name from the appropriate environment variable in the client container.",
                false
            ],
            "D": [
                "Define a GKE Endpoint. Clients should get the endpoint name from Cloud DNS.",
                false
            ]
        },
        "14": {
            "A": [
                "Download the binary from the internet during the build process.",
                false
            ],
            "B": [
                "Build a custom cloud builder image and reference the image in your build steps.",
                true
            ],
            "C": [
                "Include the binary in your Cloud Source Repositories repository and reference it in your build scripts.",
                false
            ],
            "D": [
                "Ask to have the binary added to the Cloud Build environment by filing a feature request against the Cloud Build public Issue Tracker.",
                false
            ]
        },
        "15": {
            "A": [
                "Install the Stackdriver Logging Agent and configure it to send the application logs.",
                true
            ],
            "B": [
                "Use a Stackdriver Logging Library to log directly from the application to Stackdriver Logging.",
                false
            ],
            "C": [
                "Provide the log file folder path in the metadata of the instance to configure it to send the application logs.",
                false
            ],
            "D": [
                "Change the application to log to /var/log so that its logs are automatically sent to Stackdriver Logging.",
                false
            ]
        },
        "16": {
            "A": [
                "Add a cache-control header to the objects.",
                false
            ],
            "B": [
                "Request a quota increase from the GCP Console.",
                false
            ],
            "C": [
                "Retry the request with a truncated exponential backoff strategy.",
                true
            ],
            "D": [
                "Change the storage class of the Cloud Storage bucket to Multi-regional.",
                false
            ]
        },
        "17": {
            "A": [
                " RESTful APIs",
                true
            ],
            "B": [
                "MQTT for APIs",
                false
            ],
            "C": [
                "gRPC-based APIs",
                false
            ],
            "D": [
                "SOAP-based APIs",
                false
            ]
        },
        "18": {
            "A": [
                "Perform Read-Only transactions.",
                false
            ],
            "B": [
                "Perform stale reads using single-read methods.",
                true
            ],
            "C": [
                "Perform strong reads using single-read methods.",
                false
            ],
            "D": [
                "Perform stale reads using read-write transactions.",
                false
            ]
        },
        "19": {
            "A": [
                "Set the Deployment strategy to RollingUpdate with maxSurge set to 0, maxUnavailable set to 1.",
                false
            ],
            "B": [
                "Set the Deployment strategy to RollingUpdate with maxSurge set to 1, maxUnavailable set to 0.",
                true
            ],
            "C": [
                "Set the Deployment strategy to Recreate with maxSurge set to 0, maxUnavailable set to 1.",
                false
            ],
            "D": [
                "Set the Deployment strategy to Recreate with maxSurge set to 1, maxUnavailable set to 0.",
                false
            ]
        },
        "20": {
            "A": [
                "Upload your application to Cloud Storage.",
                true
            ],
            "B": [
                "Upload your application to an App Engine environment.",
                false
            ],
            "C": [
                "Create a Compute Engine instance with Apache web server installed. Configure Apache web server to host the application.",
                false
            ],
            "D": [
                "Containerize your application first. Deploy this container to Google Kubernetes Engine (GKE) and assign an external IP address to the GKE pod hosting the application.",
                false
            ]
        },
        "21": {
            "A": [
                "Stackdriver Trace",
                false
            ],
            "B": [
                "Stackdriver Monitoring",
                false
            ],
            "C": [
                "Stackdriver Debug Snapshots",
                false
            ],
            "D": [
                "Stackdriver Debug Logpoints",
                true
            ]
        },
        "22": {
            "A": [
                "Enable the Error Reporting API on the project.",
                false
            ],
            "B": [
                "Grant the instance full access to all Cloud APIs.",
                false
            ],
            "C": [
                "Configure the application log file as a custom source.",
                true
            ],
            "D": [
                "Create a Stackdriver Logs Export Sink with a filter that matches the application's log entries.",
                false
            ]
        },
        "23": {
            "A": [
                "Ask the user to run the jobs as batch jobs.",
                true
            ],
            "B": [
                "Create a separate project for the user to run jobs.",
                false
            ],
            "C": [
                "Add the user as a job.user role in the existing project.",
                false
            ],
            "D": [
                "Allow the user to run jobs when important workloads are not running.",
                false
            ]
        },
        "24": {
            "A": [
                "Use Cloud Function to monitor resources and raise alerts.",
                false
            ],
            "B": [
                "Use Cloud Pub/Sub to monitor resources and raise alerts.",
                false
            ],
            "C": [
                "Use Stackdriver Error Reporting to capture errors and raise alerts.",
                false
            ],
            "D": [
                "Use Stackdriver Monitoring to monitor resources and raise alerts.",
                true
            ]
        },
        "25": {
            "A": [
                "Set the asynchronous option for your requests to the API to false and omit the widget displaying the API results when a timeout or error is encountered.",
                false
            ],
            "B": [
                "Set the asynchronous option for your request to the API to true and omit the widget displaying the API results when a timeout or error is encountered.",
                true
            ],
            "C": [
                "Catch timeout or error exceptions from the API call and keep trying with exponential backoff until the API response is successful.",
                false
            ],
            "D": [
                "Catch timeout or error exceptions from the API call and display the error response in the UI widget.",
                false
            ]
        },
        "26": {
            "A": [
                "Use an OAuth Client ID that uses the https://www.googleapis.com/auth/drive.file scope to obtain an access token for each user.",
                true
            ],
            "B": [
                "Use an OAuth Client ID with delegated domain-wide authority.",
                false
            ],
            "C": [
                "Use the App Engine service account and https://www.googleapis.com/auth/drive.file scope to generate a signed JSON Web Token (JWT).",
                false
            ],
            "D": [
                "Use the App Engine service account with delegated domain-wide authority.",
                false
            ]
        },
        "27": {
            "A": [
                "Request additional GKE quota in the GCP Console.",
                false
            ],
            "B": [
                "Request additional Compute Engine quota in the GCP Console.",
                true
            ],
            "C": [
                "Open a support case to request additional GKE quota.",
                false
            ],
            "D": [
                "Decouple services in the cluster, and rewrite new clusters to function with fewer cores.",
                false
            ]
        },
        "28": {
            "A": [
                "A linked list",
                false
            ],
            "B": [
                "A hash table",
                true
            ],
            "C": [
                "A two-dimensional array",
                false
            ],
            "D": [
                "A comma-delimited string",
                false
            ]
        },
        "29": {
            "A": [
                "Create a separate dataset for each department. Create a view with an appropriate WHERE clause to select records from a particular dataset for the specific department. Authorize this view to access records from your Master dataset. Give employees the permission to this department-specific dataset.",
                false
            ],
            "B": [
                "Create a separate dataset for each department. Create a data pipeline for each department to copy appropriate information from the Master dataset to the specific dataset for the department. Give employees the permission to this department-specific dataset.",
                false
            ],
            "C": [
                "Create a dataset named Master dataset. Create a separate view for each department in the Master dataset. Give employees access to the specific view for their department.",
                true
            ],
            "D": [
                "Create a dataset named Master dataset. Create a separate table for each department in the Master dataset. Give employees access to the specific table for their department.",
                false
            ]
        },
        "30": {
            "A": [
                "Smoke tests",
                false
            ],
            "B": [
                "Stackdriver uptime checks",
                true
            ],
            "C": [
                "Cloud Load Balancing - heath checks",
                false
            ],
            "D": [
                "Managed instance group - heath checks",
                false
            ]
        },
        "31": {
            "A": [
                "Distribute the uploads across a large number of individual storage buckets.",
                false
            ],
            "B": [
                "Use the XML API instead of the JSON API for interfacing with Cloud Storage.",
                false
            ],
            "C": [
                "Pass the HTTP response codes back to clients that are invoking the uploads from your application.",
                false
            ],
            "D": [
                "Limit the upload rate from your application clients so that the dormant bucket's peak request rate is reached more gradually.",
                true
            ]
        },
        "32": {
            "A": [
                "Move the data to a Cloud Storage bucket, and mount the bucket on the filesystem using Cloud Storage FUSE.",
                false
            ],
            "B": [
                "Move the data to a Cloud Storage bucket, and copy the data to the boot disk of the instance via a startup script.",
                false
            ],
            "C": [
                "Move the data to a Compute Engine persistent disk, and attach the disk in read-only mode to multiple Compute Engine virtual machine instances.",
                true
            ],
            "D": [
                "Move the data to a Compute Engine persistent disk, take a snapshot, create multiple disks from the snapshot, and attach each disk to its own instance.",
                false
            ]
        },
        "33": {
            "A": [
                "Reserve a static external IP address and assign it to an HTTP(S) load balancing service's forwarding rule. Clients should use this IP address to connect to the service.",
                false
            ],
            "B": [
                "Reserve a static external IP address and assign it to an HTTP(S) load balancing service's forwarding rule. Then, define an A record in Cloud DNS. Clients should use the name of the A record to connect to the service.",
                false
            ],
            "C": [
                "Ensure that clients use Compute Engine internal DNS by connecting to the instance name with the url https://[INSTANCE_NAME].[ZONE].c. [PROJECT_ID].internal/.",
                true
            ],
            "D": [
                "Ensure that clients use Compute Engine internal DNS by connecting to the instance name with the url https://[API_NAME]/[API_VERSION]/.",
                false
            ]
        },
        "34": {
            "A": [
                "Add a Stackdriver counter metric for path:/api/alpha/.",
                false
            ],
            "B": [
                "Add a Stackdriver counter metric for endpoint:/api/alpha/*.",
                false
            ],
            "C": [
                "Export the logs to Cloud Storage and count lines matching /api/alpha.",
                true
            ],
            "D": [
                "Export the logs to Cloud Pub/Sub and count lines matching /api/alpha.",
                false
            ]
        },
        "35": {
            "A": [
                "Deploy the application to Compute Engine and turn on autoscaling.",
                false
            ],
            "B": [
                "Replace the application's features with appropriate microservices in phases.",
                true
            ],
            "C": [
                "Refactor the monolithic application with appropriate microservices in a single effort and deploy it.",
                false
            ],
            "D": [
                "Build a new application with the appropriate microservices separate from the monolith and replace it when it is complete.",
                false
            ]
        },
        "36": {
            "A": [
                "Cloud SQL",
                false
            ],
            "B": [
                "Cloud Storage",
                false
            ],
            "C": [
                "Cloud Spanner",
                false
            ],
            "D": [
                "Cloud Datastore/Firestore",
                true
            ]
        },
        "37": {
            "A": [
                "App Engine backed by Cloud Storage",
                false
            ],
            "B": [
                "Compute Engine backed by Persistent Disk",
                false
            ],
            "C": [
                "Transfer Appliance backed by Cloud Filestore",
                false
            ],
            "D": [
                "Cloud Content Delivery Network (CDN) backed by Cloud Storage",
                true
            ]
        },
        "38": {
            "A": [
                "Use Container Registry to create a registry in each development team's project. Configure the Cloud Build build to push the Docker image to the project's registry. Grant the operations team access to each development team's registry.",
                false
            ],
            "B": [
                "Create a separate project for the operations team that has Container Registry configured. Assign appropriate permissions to the Cloud Build service account in each developer team's project to allow access to the operation team's registry.",
                true
            ],
            "C": [
                "Create a separate project for the operations team that has Container Registry configured. Create a Service Account for each development team and assign the appropriate permissions to allow it access to the operations team's registry. Store the service account key file in the source code repository and use it to authenticate against the operations team's registry.",
                false
            ],
            "D": [
                "Create a separate project for the operations team that has the open source Docker Registry deployed on a Compute Engine virtual machine instance. Create a username and password for each development team. Store the username and password in the source code repository and use it to authenticate against the operations team's Docker registry.",
                false
            ]
        },
        "39": {
            "A": [
                "Deployment",
                false
            ],
            "B": [
                "StatefulSet",
                true
            ],
            "C": [
                "ReplicaSet",
                false
            ],
            "D": [
                "ReplicaController",
                false
            ]
        },
        "40": {
            "A": [
                "Add RUN commands in the Dockerfile to execute unit and integration tests.",
                false
            ],
            "B": [
                "Create a Cloud Build build config file with a single build step to compile unit and integration tests.",
                false
            ],
            "C": [
                "Create a Cloud Build build config file that will spawn a separate cloud build pipeline for unit and integration tests.",
                false
            ],
            "D": [
                "Create a Cloud Build build config file with separate cloud builder steps to compile and execute unit and integration tests.",
                true
            ]
        },
        "41": {
            "A": [
                "Grant your user account the roles/storage.objectCreator role for the Cloud Storage bucket.",
                false
            ],
            "B": [
                "Grant your user account the roles/iam.serviceAccountUser role for the service-PROJECTA@gcf-admin-robot.iam.gserviceaccount.com service account.",
                false
            ],
            "C": [
                "Grant the service-PROJECTA@gcf-admin-robot.iam.gserviceaccount.com service account the roles/storage.objectCreator role for the Cloud Storage bucket.",
                true
            ],
            "D": [
                "Enable the Cloud Storage API in project B.",
                false
            ]
        },
        "42": {
            "A": [
                "Use App Engine for autoscaling.",
                true
            ],
            "B": [
                "Use Cloud Functions for autoscaling.",
                false
            ],
            "C": [
                "Use a Compute Engine cluster for the service.",
                false
            ],
            "D": [
                "Use a dedicated Compute Engine virtual machine instance for the service.",
                false
            ]
        },
        "43": {
            "A": [
                "Take frequent snapshots of the virtual machines.",
                false
            ],
            "B": [
                "Install the Cloud Logging agent on the virtual machines.",
                true
            ],
            "C": [
                " Install the Cloud Monitoring agent on the virtual machines.",
                false
            ],
            "D": [
                "Use Cloud Trace to look for performance bottlenecks.",
                false
            ]
        },
        "44": {
            "A": [
                "Create manual subnets.",
                true
            ],
            "B": [
                "Create an auto mode subnet.",
                false
            ],
            "C": [
                "Create multiple peered VPCs.",
                false
            ],
            "D": [
                "Provision a single instance for NAT.",
                false
            ]
        },
        "45": {
            "A": [
                "Cloud VPN",
                false
            ],
            "B": [
                "Cloud Armor",
                false
            ],
            "C": [
                "Virtual Private Cloud",
                false
            ],
            "D": [
                "Cloud Identity-Aware Proxy",
                true
            ]
        },
        "46": {
            "A": [
                "Use Google App Engine services.",
                false
            ],
            "B": [
                "Use serverless Google Cloud Functions.",
                false
            ],
            "C": [
                "Use Knative to build and deploy serverless applications.",
                true
            ],
            "D": [
                " Use Google Kubernetes Engine for automated deployments.",
                true
            ],
            "E": [
                "Use a large Google Compute Engine cluster for deployments.",
                false
            ]
        },
        "47": {
            "A": [
                "Use local SSDs to store state.",
                false
            ],
            "B": [
                "Put a memcache layer in front of MySQL.",
                false
            ],
            "C": [
                "Move the state storage to Cloud Spanner.",
                false
            ],
            "D": [
                "Replace the MySQL instance with Cloud SQL.",
                true
            ]
        },
        "48": {
            "A": [
                "Cloud Armor",
                false
            ],
            "B": [
                "Cloud Functions",
                false
            ],
            "C": [
                "Cloud Endpoints",
                true
            ],
            "D": [
                "Shielded Virtual Machines",
                false
            ]
        },
        "49": {
            "A": [
                "Use the current single instance MySQL on Compute Engine and several read-only MySQL servers on Compute Engine.",
                false
            ],
            "B": [
                "Use the current single instance MySQL on Compute Engine, and replicate the data to Cloud SQL in an external master configuration.",
                false
            ],
            "C": [
                "Replace the current single instance MySQL instance with Cloud SQL, and configure high availability.",
                true
            ],
            "D": [
                "Replace the current single instance MySQL instance with Cloud SQL, and Google provides redundancy without further configuration.",
                false
            ]
        },
        "50": {
            "A": [
                "kubectl logs [PARAM]",
                false
            ],
            "B": [
                "gcloud logging read [PARAM]",
                true
            ],
            "C": [
                "kubectl exec it [PARAM] journalctl",
                false
            ],
            "D": [
                "gcloud compute ssh [PARAM] -command= sudo journalctl",
                false
            ]
        },
        "51": {
            "A": [
                "Manually trigger the build for new releases.",
                false
            ],
            "B": [
                "Create a build trigger on a Git tag pattern. Use a Git tag convention for new releases.",
                true
            ],
            "C": [
                "Create a build trigger on a Git branch name pattern. Use a Git branch naming convention for new releases.",
                false
            ],
            "D": [
                "Commit your source code to a second Cloud Source Repositories repository with a second Cloud Build trigger. Use this repository for new releases only.",
                false
            ]
        },
        "52": {
            "A": [
                "Set Account_id as a key.",
                false
            ],
            "B": [
                "Set Account_id_Event_timestamp as a key.",
                true
            ],
            "C": [
                "Set Event_timestamp_Account_id as a key.",
                false
            ],
            "D": [
                "Set Event_timestamp as a key.",
                false
            ]
        },
        "53": {
            "A": [
                "Install the Stackdriver Client Library.",
                false
            ],
            "B": [
                "Install the Stackdriver Monitoring Agent.",
                true
            ],
            "C": [
                "Use the Stackdriver Metrics Explorer.",
                false
            ],
            "D": [
                "Use the Google Cloud Platform Console.",
                false
            ]
        },
        "54": {
            "A": [
                "Use Stackdriver Monitoring to plot slot usage.",
                false
            ],
            "B": [
                "Use Stackdriver Trace to plot API execution time.",
                false
            ],
            "C": [
                "Use Stackdriver Trace to plot query execution time.",
                false
            ],
            "D": [
                "Use Stackdriver Monitoring to plot query execution times.",
                true
            ]
        },
        "55": {
            "A": [
                "Create a table named Customers. Add an Array field in a table that will hold phone numbers for the customer.",
                false
            ],
            "B": [
                "Create a table named Customers. Create a table named Phones. Add a CustomerId field in the Phones table to find the CustomerId from a phone number.",
                false
            ],
            "C": [
                "Create a table named Customers. Add an Array field in a table that will hold phone numbers for the customer. Create a secondary index on the Array field.",
                false
            ],
            "D": [
                "Create a table named Customers as a parent table. Create a table named Phones, and interleave this table into the Customer table. Create an index on the phone number field in the Phones table.",
                true
            ]
        },
        "56": {
            "A": [
                "Verify domain ownership with Webmaster Central. Create a DNS CNAME record to point to the App Engine canonical name ghs.googlehosted.com.",
                true
            ],
            "B": [
                "Verify domain ownership with Webmaster Central. Define an A record pointing to the single global App Engine IP address.",
                false
            ],
            "C": [
                "Define a mapping in dispatch.yaml to point the domain www.altostrat.com to your App Engine service. Create a DNS CNAME record to point to the App Engine canonical name ghs.googlehosted.com.",
                false
            ],
            "D": [
                "Define a mapping in dispatch.yaml to point the domain www.altostrat.com to your App Engine service. Define an A record pointing to the single global App Engine IP address.",
                false
            ]
        },
        "57": {
            "A": [
                "Cloud Amor",
                false
            ],
            "B": [
                "Stackdriver Debugger",
                false
            ],
            "C": [
                "Cloud Security Scanner",
                true
            ],
            "D": [
                "Stackdriver Error Reporting",
                false
            ]
        },
        "58": {
            "A": [
                "Change the application to accept images directly and store them in the database that stores other user information.",
                false
            ],
            "B": [
                "Change the application to create signed URLs for Cloud Storage. Transfer these signed URLs to the client application to upload images to Cloud Storage.",
                true
            ],
            "C": [
                "Set up a web server on GCP to accept user images and create a file store to keep uploaded files. Change the application to retrieve images from the file store.",
                false
            ],
            "D": [
                "Create a separate bucket for each user in Cloud Storage. Assign a separate service account to allow write access on each bucket. Transfer service account credentials to the client application based on user information. The application uses this service account to upload images to Cloud Storage.",
                false
            ]
        },
        "59": {
            "A": [
                "Place the unique configuration values in the persistent disk.",
                false
            ],
            "B": [
                "Place the unique configuration values in a Cloud Bigtable table.\n",
                false
            ],
            "C": [
                "Place the unique configuration values in the instance template startup script.",
                false
            ],
            "D": [
                "Place the unique configuration values in the instance template instance metadata.",
                true
            ]
        },
        "60": {
            "A": [
                "File a ticket with Cloud Support indicating that the application performs faster locally.",
                false
            ],
            "B": [
                "Use Cloud Debugger snapshots to look at a point-in-time execution of the application.",
                false
            ],
            "C": [
                "Use Cloud Profiler to determine which functions within the application take the longest amount of time.",
                true
            ],
            "D": [
                "Add logging commands to the application and use Cloud Logging to check where the latency problem occurs.",
                false
            ]
        },
        "61": {
            "A": [
                "Increase the size of the instance class.",
                false
            ],
            "B": [
                "Change the Persistent Disk type to SSD.",
                false
            ],
            "C": [
                "Change /product-details to perform the requests in parallel.",
                true
            ],
            "D": [
                "Store the /sku-details information in a database, and replace the webservice call with a database query.",
                false
            ]
        },
        "62": {
            "A": [
                "Use BigQuery federated queries to query data from Cloud Storage.",
                false
            ],
            "B": [
                "Create a dataset in the EU region that will keep information about EU users only.",
                true
            ],
            "C": [
                "Create a Cloud Storage bucket in the EU region to store information for EU users only.",
                false
            ],
            "D": [
                "Re-upload your data using to a Cloud Dataflow pipeline by filtering your user records out.",
                false
            ],
            "E": [
                "Use DML statements in BigQuery to update/delete user records based on their requests.",
                true
            ]
        },
        "63": {
            "A": [
                "manual_scaling: instances: 5 min_pending_latency: 30ms",
                false
            ],
            "B": [
                "manual_scaling: max_instances: 5 idle_timeout: 10m",
                false
            ],
            "C": [
                "basic_scaling: instances: 5 min_pending_latency: 30ms",
                false
            ],
            "D": [
                "basic_scaling: max_instances: 5 idle_timeout: 10m",
                true
            ]
        },
        "64": {
            "A": [
                "Grant the service account BigQuery Data Viewer and BigQuery Job User roles.",
                true
            ],
            "B": [
                "Grant the service account BigQuery Data Editor and BigQuery Data Viewer roles.",
                false
            ],
            "C": [
                "Create a view in BigQuery from the SQL query and SELECT* from the view in the CLI.",
                false
            ],
            "D": [
                "Create a new dataset in BigQuery, and copy the source table to the new dataset Query the new dataset and table from the CLI.",
                false
            ]
        },
        "65": {
            "A": [
                "Reboot the machine.",
                false
            ],
            "B": [
                "Enable and check the serial port output.",
                true
            ],
            "C": [
                "Delete the machine and create a new one.",
                false
            ],
            "D": [
                "Take a snapshot of the disk and attach it to a new machine.",
                false
            ]
        },
        "66": {
            "A": [
                "Add the label AUTOSCALE to the instance group template.",
                false
            ],
            "B": [
                "Decrease the cool-down period for instances added to the group.",
                true
            ],
            "C": [
                "Increase the target CPU usage for the instance group autoscaler.",
                false
            ],
            "D": [
                "Decrease the target CPU usage for the instance group autoscaler.",
                true
            ],
            "E": [
                "Remove the health-check for individual VMs in the instance group.",
                false
            ]
        },
        "67": {
            "A": [
                "Perform a rolling-action with maxSurge set to 1, maxUnavailable set to 0.",
                false
            ],
            "B": [
                "Perform a rolling-action with maxSurge set to 0, maxUnavailable set to 1",
                true
            ],
            "C": [
                "Perform a rolling-action with maxHealthy set to 1, maxUnhealthy set to 0.",
                false
            ],
            "D": [
                "Perform a rolling-action with maxHealthy set to 0, maxUnhealthy set to 1.",
                false
            ]
        }
    },
    "images": {
        "1": false,
        "2": false,
        "3": false,
        "4": "quiz_data_devlop/images/Cloud Developer/4.jpeg",
        "5": false,
        "6": false,
        "7": false,
        "8": false,
        "9": false,
        "10": false,
        "11": false,
        "12": "quiz_data_devlop/images/Cloud Developer/12.jpeg",
        "13": false,
        "14": false,
        "15": false,
        "16": false,
        "17": false,
        "18": false,
        "19": "quiz_data_devlop/images/Cloud Developer/19.jpeg",
        "20": false,
        "21": false,
        "22": false,
        "23": false,
        "24": false,
        "25": false,
        "26": false,
        "27": "quiz_data_devlop/images/Cloud Developer/27.jpeg",
        "28": false,
        "29": false,
        "30": false,
        "31": false,
        "32": false,
        "33": false,
        "34": false,
        "35": false,
        "36": false,
        "37": false,
        "38": false,
        "39": false,
        "40": false,
        "41": false,
        "42": false,
        "43": false,
        "44": false,
        "45": false,
        "46": false,
        "47": false,
        "48": false,
        "49": false,
        "50": false,
        "51": false,
        "52": "quiz_data_devlop/images/Cloud Developer/52.png",
        "53": false,
        "54": false,
        "55": false,
        "56": false,
        "57": false,
        "58": false,
        "59": false,
        "60": false,
        "61": "quiz_data_devlop/images/Cloud Developer/61.jpeg",
        "62": false,
        "63": false,
        "64": false,
        "65": false,
        "66": false,
        "67": false
    },
    "multiple_choice": {
        "1": false,
        "2": false,
        "3": false,
        "4": false,
        "5": false,
        "6": false,
        "7": false,
        "8": false,
        "9": false,
        "10": true,
        "11": false,
        "12": false,
        "13": false,
        "14": false,
        "15": false,
        "16": false,
        "17": false,
        "18": false,
        "19": false,
        "20": false,
        "21": false,
        "22": false,
        "23": false,
        "24": false,
        "25": false,
        "26": false,
        "27": false,
        "28": false,
        "29": false,
        "30": false,
        "31": false,
        "32": false,
        "33": false,
        "34": false,
        "35": false,
        "36": false,
        "37": false,
        "38": false,
        "39": false,
        "40": false,
        "41": false,
        "42": false,
        "43": false,
        "44": false,
        "45": false,
        "46": true,
        "47": false,
        "48": false,
        "49": false,
        "50": false,
        "51": false,
        "52": false,
        "53": false,
        "54": false,
        "55": false,
        "56": false,
        "57": false,
        "58": false,
        "59": false,
        "60": false,
        "61": false,
        "62": true,
        "63": false,
        "64": false,
        "65": false,
        "66": true,
        "67": false
    }
}